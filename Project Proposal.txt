Project Proposal: A movie Web app which will act as a Mad-Lib recommender that suggests a film from a curated list of movies 

1. What tech stack will you use for your final project?
Frontend
React + Vite (fast dev server & build)


Backend:

○ Database: Not sure but found on the web PostgreSQL (Supabase)
○ Content Management: Not sure although found (Stretch) simple in-app admin page t
○ Hosting: not sure but found on the web Vercel for the React app


Project Type
Website / Web App (responsive, accessible on modern browsers)


Project Goal
Movie tracker where users can:
-Discover one new title based off a Mad-Lib recommender that suggests a film from a curated list of movies 
FUN xample: 
“It’s [weather] and I’m dressed like [mood/aesthetic]. Serve a [genre] that feels [adjective] and tastes like [flavor/metaphor]. Keep it under [runtime] minutes and make sure it pairs with [snack/drink].”


User Demographic
The primary users of the app will be:
All Ages. Movie junkies of horror, independent films, documentaries, comedy, action, thriller, drama and steamy romance. 


Data and API's
External Data-
 TMDb API for search, details, posters, genres.


Internal Data
-User accounts

Data Collection: 
(different tables)
-Movies (canonical facts): title, year, runtime, poster, external IDs (IMDb/OMDb), genres (from your four), optional moods.
-Mad-Lib Prompts (sessions): place, adjective, thing, vibe, drink, chosen suggestion, time.
-Controlled lists: genres (only: body horror, steamy romance, documentary, crass comedy), moods (optional: spooky, romantic, warm, dark, brainy, etc.



Project Approach
1. Database Schema
design of the whole database. what tables i create. 

2. Functionality

landing page with button at the bottom "try again"

Search and Filter: Users can search for and filter content based on categories
and keywords.

3. User Flow
WIP

Homepage: Displays a landing page with the madlib esque sentence. The page will only recommend 3 titles per day. If you choose none, you can get access to a full list of movies from a seperate page. 

Content Pages: If you choose none, you can get access to a full list of movies from a seperate page. 
Search/Filter: Users can search for specific movies and filter content by
category.

4. Stretch Goals
Multi-language Support
